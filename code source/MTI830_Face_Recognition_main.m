%% MTI830 - Forage de textes et de données audiovisuelles
% M'Hand Kedjar - August 2016
% This program implement face recognition methods. 
% We will mainly focus on the following techniques: 
% 1. PCA, 2.2D-PCA(?), 3.SIFT, 4.ASIFT(?), 5.HOG+SVM, 6.LPB+SVM(?)
% 7. SIFT+BOF+SVM(?), 8.ASIFT+BOF+SVM(?)
% The general flow of the algorithm is: 
% First, we select a set containing images
% From that set, we defined two subsets: the first is for training, and the
% second for testing
% We will focuse on the most important metrics: recognition rate and
% running time
% We will vary the sizes of the training and the test subsets, as well as
% the number of images of a given person, and measure the influence on the
% metrics. 

%% Clearing the workspace
close all; clc; clear 
%% Adding the needed libraries
addpath('pca','sift','hogsvm')
save_Results = 0;
ratio_train = 0.8; 
%% Available databases:
% 1. ORL Database (http://www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html)
% 2. YALE Database (http://vision.ucsd.edu/content/yale-face-database)
% 3. Caltech Human Face Database (http://www.vision.caltech.edu/html-files/archive.html)
% 4. Labeled Faces in the Wild (http://vis-www.cs.umass.edu/lfw/)
% 5. ColorFeret (https://www.nist.gov/itl/iad/image-group/color-feret-database)
face_db_index = [ 1 , 2, 3, 4, 5];  
%% Available algorithms
% 1. PCA
% 2. SIFT
% 3. HOG + SVM
algorithm_index = [1, 2, 3]; %[1, 2, 3];

%% Sofware phase : test or release
software_phase = 'test';
%software_phase = 'release';
fprintf('==================================\n');   
fprintf('=====Face Recognition System======\n');
fprintf('==================================\n');   

for face_db_id= face_db_index(2) : face_db_index(end)
    
    %% Choosing the Database
    tic
	fprintf('Loading the database...\n')
    [face_db,...
     face_db_cropped_resized,...
     face_db_cropped_not_resized,...
     db_name] = ...
              MTI830_Face_Recognition_load_database(face_db_id , software_phase);
    fprintf('\t%s loaded!\n', db_name)
    running_time = toc;
    fprintf('...%0.5f sec\n',running_time )
    
    tic
    %% Database Split into training and test subsets
    fprintf('Generating the training and test subsets...\n')
	[face_db_train,...
          label_train,...
          face_db_test,...
          label_test,...
          face_db_train_sift,...
          face_db_train_pca,...
          face_db_train_hogsvm,...
          face_db_test_sift,...
          face_db_test_pca,...
          face_db_test_hogsvm,...
          config_file,...
          img_size] = ...
              MTI830_Face_Recognition_split_database(face_db ,...
                                                     face_db_cropped_resized,...
                                                     face_db_cropped_not_resized,...
                                                     face_db_id,...
                                                     ratio_train);
     running_time = toc;
     fprintf('...%0.5f sec\n',running_time )
    
    %% Algorithm choice
    fprintf('Running the algorithm...\n')
    for algorithm = algorithm_index(1) : algorithm_index(end);
        
        %% PCA
        if(algorithm == 1)
            tic
            fprintf('PCA : Principal Component Analysis...\n')
            fprintf('PCA : Training...\n')
            [pca_train_results] = PCA_face_recognition_training(...
                                               face_db_train_pca,...
                                               label_train,...
                                               face_db_id,...
                                               db_name,...
                                               config_file,...
                                               img_size,...
                                               save_Results);
            running_time = toc;
            fprintf('...%0.5f sec\n',running_time )
            
            tic
            fprintf('PCA : Test...\n')
            [pca_test_results] = PCA_face_recognition_test(...
                                               pca_train_results,...
                                               face_db_train_pca,...
                                               face_db_test_pca,...
                                               label_test,...
                                               label_train,...
                                               face_db_id,...
                                               db_name,...
                                               config_file,...
                                               img_size,...
                                               save_Results);
            running_time = toc;
            fprintf('...%0.5f sec\n',running_time )
        end
        
        %% SIFT
        if(algorithm == 2)
            tic
            fprintf('SIFT : Scale Invariant Feature Transform...\n')
            fprintf('SIFT : Training...\n')
            [sift_train_results] = SIFT_face_recognition_training(...
                                              face_db_train_sift,...
                                              label_train,...
                                              face_db_id,...
                                              db_name,...
                                              config_file,...
                                              save_Results);
            running_time = toc;
            fprintf('...%0.5f sec\n',running_time )
            
            tic
            fprintf('SIFT : Test...\n')
            [sift_test_results] = SIFT_face_recognition_test(...
                                              sift_train_results,...
                                              face_db_test_sift,...
                                              label_test,...
                                              face_db_train_sift,...
                                              label_train,...
                                              config_file,...
                                              save_Results );
            running_time = toc;
            fprintf('...%0.5f sec\n',running_time )
        end
		
		%% HOG + SVM 
		if(algorithm == 3)
            tic
            fprintf('HOG + SVM  : Histogram of Oriented Gradient + Support Vector Machine...\n')
            fprintf('HOG + SVM : Training...\n')
			[hogsvm_train_results] = HOGSVM_face_recognition_training(...
                                              face_db_train_hogsvm,...
                                              label_train,...
                                              face_db_id,...
                                              db_name,...
                                              config_file,...
                                              img_size,...
                                              save_Results);
            running_time = toc;
            fprintf('...%0.5f sec\n',running_time )
            
            tic
            fprintf('HOG + SVM : Test...\n')
            [hogsvm_test_results] = HOGSVM_face_recognition_test(...
                                              hogsvm_train_results,...
                                              face_db_test_hogsvm,...
                                              label_test,...
                                              label_train,...
                                              face_db_id,...
                                              db_name,...
                                              config_file,...
                                              img_size,...
                                              save_Results);
            running_time = toc;
            fprintf('...%0.5f sec\n',running_time )
		end

    end 
end




